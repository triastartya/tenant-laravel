version: 2.1
jobs:
  build-main:
    machine:
      image: ubuntu-2204:2024.01.2
    # If running ARM, the resource class needs to be added. Omitting this defaults to amd64
    resource_class: arm.medium
    steps:
      - add_ssh_keys:
          fingerprints:
            - 'SHA256:hQ5CqSmDxYcA4Lnw5PxRF1d+IMIvioaMeObtbnzFaaw'
      - run:
          name: Deploy app to server
          command: |
            ssh -o StrictHostKeyChecking=no trias@203.194.112.71 "cd aplikasi/backend && ./deployer.sh"
  build-development:
    machine:
      image: ubuntu-2004:current
    # If running ARM, the resource class needs to be added. Omitting this defaults to amd64
    resource_class: medium
    steps:
      - checkout
      - run:
          name: install php8.3
          command: |
            sudo add-apt-repository ppa:ondrej/php
            sudo apt-get update
            sudo apt-get install --fix-missing
            sudo apt-get install php8.3 php8.3-cli
      - run:
          name: install php-extention
          command: sudo apt-get install -y php8.3-cli php8.3-common php8.3-mysql php8.3-zip php8.3-gd php8.3-mbstring php8.3-curl php8.3-xml php8.3-bcmath php8.3-dev
      - run:
          name: install pecl mongodb
          command: |
            sudo pecl install mongodb
            echo "extension=mongodb.so" | sudo tee -a /etc/php/8.3/cli/php.ini
      - run:
          name: install composer
          command: |
            curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php
            HASH=`curl -sS https://composer.github.io/installer.sig`
            echo $HASH
            php -r "if (hash_file('SHA384', '/tmp/composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
            sudo php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
            composer
      - run:
          name: composer install
          command: |
            composer install
            php artisan octane:install --server=frankenphp
      - run:
          name: Login to dockerhub
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: Build dockerfile
          command: |
            docker build --no-cache -t triastartya/tenant-laravel:$CIRCLE_SHA1 .
      - run:
          name: Push Docker Image
          command: |
            docker push triastartya/tenant-laravel:$CIRCLE_SHA1
            docker tag triastartya/tenant-laravel:$CIRCLE_SHA1 triastartya/tenant-laravel:latest
            docker push triastartya/tenant-laravel:latest
      - add_ssh_keys:
          fingerprints:
            - 'SHA256:hQ5CqSmDxYcA4Lnw5PxRF1d+IMIvioaMeObtbnzFaaw'
      - run:
          name: Deploy app to server
          command: |
            ssh -o StrictHostKeyChecking=no trias@203.194.112.71 "cd aplikasi && ./deployer-api-gracis.sh"
workflows :
  basic-workflow:
    jobs:
      - build-development:
          filters:
            branches:
              only:
                - development
      - build-main:
          filters:
            branches:
              only:
                - main